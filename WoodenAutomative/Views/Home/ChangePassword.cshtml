@using WoodenAutomative.Domain.Dtos.Request.ChangePassword
@model ChangePasswordRequest
@{
    ViewData["Title"] = "Index";
}
<!-- begin container-fluid -->
<div class="container-fluid">
    <!-- begin row -->
    <div class="row">
        <div class="col-md-12 m-b-30">
            <!-- begin page title -->
            <div class="d-block d-sm-flex flex-nowrap align-items-center">
                <div class="ml-auto d-flex align-items-center">
                    <nav>
                        <ol class="breadcrumb p-0 m-b-0">
                            <li class="breadcrumb-item">
                                <a href="~/Home/index"><i class="ti ti-home"></i></a>
                            </li>
                            <li class="breadcrumb-item">
                                Home
                            </li>
                            <li class="breadcrumb-item active text-primary" aria-current="page">Change Password</li>
                        </ol>
                    </nav>
                </div>
            </div>
            <!-- end page title -->
        </div>
    </div>
    <!-- end row -->
    <!-- begin row -->
    <div class="row">
        <div class="col-md-8">
            <div class="card card-statistics">
                <div class="card-header">
                    <div class="card-heading">
                        <h4 class="card-title">Change Password</h4>
                    </div>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group row">
                            @Html.LabelFor(model => model.CurrentPassword, new { @class="col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.PasswordFor(model => model.CurrentPassword , new { @class="form-control", id= "CurrentPassword"})
                                <span id="currentPasswordError" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.NewPassword, new { @class="col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.PasswordFor(model => model.NewPassword , new { @class="form-control" , id = "NewPassword" })
                                <span id="newPasswordError" class="text-danger"></span>


                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.ConfirmNewPassword, new { @class="col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.PasswordFor(model => model.ConfirmNewPassword , new { @class="form-control", id = "ConfirmNewPassword" })
                                <span id="confirmNewPasswordError" class="text-danger"></span>
                                <span id="current password is invalid"></span>
                            </div>
                        </div>  
                        <div class="form-group row">
                            <div class="col-sm-2">
                            </div>
                            <div class="col-sm-4 text-danger">
                               @TempData["changepassworderror"]
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-4">
                                <button type="submit" class="btn btn-success">Change</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- end row -->
</div>
<!-- end container-fluid -->
@section Scripts{
    <script>
        $(document).ready(function () {
            
         $("form").submit(function () {
                        $("#currentPasswordError").text("");
            $("#newPasswordError").text("");
            $("#confirmNewPasswordError").text("");
            //$("#newandconfirmPasswordCannotMatchError").text("");
            //$("#oldandNewPasswordCannotSameError").text("");
            var currentpassword = $("#CurrentPassword").val();
            var newpassword = $("#NewPassword").val();
            var confirmnewpassword = $("#ConfirmNewPassword").val();

            console.log("Current Password: " + currentpassword);
            console.log("New Password: " + newpassword);
            console.log("Confirm New Password: " + confirmnewpassword);

            if (currentpassword == "" && newpassword == "" && confirmnewpassword == "") {

                //if (phoneNumber == "") {
                //    $("#phoneNumberError").text("Mobile Number is Required");
                //}
                //if (phoneNumber.length > 10) {
                //    $("#phoneNumberError").text("Only 10 digit Mobile Number is Required");
                //}
                $("#currentPasswordError").text("Current Password is Required");
                $("#newPasswordError").text("New Password is Required");
                $("#confirmNewPasswordError").text("Confirm New Password is Required");

                return false;
            }else if(newpassword == "" && confirmnewpassword == "")
            {
                $("#newPasswordError").text("New Password is Required");
                $("#confirmNewPasswordError").text("Confirm New Password is Required");
                return false;

            }
            else if (currentpassword == "") {
                $("#currentPasswordError").text("Current Password is Required");
                return false;
            }
            else if (newpassword == "") {
                $("#newPasswordError").text("New Password is Required");
                return false;
            }
            else if (confirmnewpassword == "" ) {
                $("#confirmNewPasswordError").text("Confirm New Password is Required");
                return false;
            }
            //else {
            //    if (newpassword != confirmnewpassword) {
            //        $("#confirmNewPasswordError").text("Confirm password is not match New Password");
            //        return false;
            //    }
            //}
        });

           
        });
        $("#ConfirmNewPassword").on("keyup", function () {
            var newPassword = $("#NewPassword").val();
            var confirmNewPassword = $("#ConfirmNewPassword").val();

            if (newPassword !== confirmNewPassword) {
                $("#confirmNewPasswordError").text("Confirm password does not match new password");
            } else {
                $("#confirmNewPasswordError").text("");
            }
        });
       


        
        //});
    </script>
}