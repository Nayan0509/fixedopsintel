@using WoodenAutomative.Domain.Dtos.Request.ChangePassword
@model ChangePasswordRequest
@{
    ViewData["Title"] = "Index";

}
<!-- begin container-fluid -->
<div class="container-fluid">
    <!-- begin row -->
    <div class="row">
        <div class="col-md-12 m-b-30">
            <!-- begin page title -->
            <div class="d-block d-sm-flex flex-nowrap align-items-center">
                <div class="ml-auto d-flex align-items-center">
                    <nav>
                        <ol class="breadcrumb p-0 m-b-0">
                            <li class="breadcrumb-item">
                                <a href="~/Home/index"><i class="ti ti-home"></i></a>
                            </li>
                            <li class="breadcrumb-item">
                                Home
                            </li>
                            <li class="breadcrumb-item active text-primary" aria-current="page">Change Password</li>
                        </ol>
                    </nav>
                </div>
            </div>
             
            <!-- end page title -->
        </div>
    </div>
    <!-- end row -->
    <!-- begin row -->
    <div class="row">
        <div class="col-md-10 col-lg-10 col-sm-10 ">
            
            <div class="card card-statistics">
                <div class="row">
                    <div class="col-md-6 col-sm-6">
                        <div class="card-header">
                            <div class="card-heading">
                                <h4 class="card-title" style="text-align:center;">Change Password</h4>
                            </div>
                        </div>
                     </div>
                    <div class="col-md-6 col-sm-6">
                        <div class="card-header">
                            <div class="card-heading">
                                <h4 class="card-title" style="text-align:center;">Password Hint</h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 col-lg-6 col-sm-6">
                            @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.CurrentPassword, new { @class="col-sm-4 col-form-label" })
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                        @Html.PasswordFor(model => model.CurrentPassword , new { @class="form-control required", id= "CurrentPassword"})
                                        <button type="button" class="btn btn-default toggle-password" style="position: absolute; right: -10px; top: 50%;transform: translateY(-50%);" data-target="#CurrentPassword">
                                                <i class="fa fa-eye"></i>
                                            </button>
                                        </div>
                                        <span id="currentPasswordError" class="text-danger"></span>
                                    </div>

                                </div>

                                <div class="form-group row ">
                                    @Html.LabelFor(model => model.NewPassword, new { @class="col-sm-4 col-form-label" })
                                    <div class="col-sm-8 position-relative">
                                        <div class="input-group">
                                            @Html.PasswordFor(model => model.NewPassword , new { @class="form-control required" , id = "NewPassword" })

                                            <button type="button" class="btn btn-default toggle-password" style="position: absolute; right: -10px; top: 50%;transform: translateY(-50%);" data-target="#NewPassword">
                                                <i class="fa fa-eye"></i>
                                            </button>
                                        </div>
                                        <span id="CurrentandNewPasswordError" class="text-danger"></span>
                                        <span id="newPasswordError" class="text-danger"></span>


                                    </div>
                                    <div>
                                    </div>
                                </div>

                                @* <ul class="float-right">
                            <li class="text-secondary"> At least one uppercase letter.</li>
                            <li class="text-secondary"> At least one lowercase lette.r</li>
                            <li class="text-secondary"> At least one number.</li>
                            <li class="text-secondary"> At least one special character.</li>
                            <li class="text-secondary"> No Whitespaces.</li>
                            </ul>*@
                                <div class="form-group row ">
                                    @Html.LabelFor(model => model.ConfirmNewPassword, new { @class="col-sm-4 col-form-label" })
                                    <div class="col-sm-8">
                                        <div class="input-group">

                                            @Html.PasswordFor(model => model.ConfirmNewPassword , new { @class="form-control required", id = "ConfirmNewPassword" })
                                            <button type="button" class="btn btn-default toggle-password" style="position: absolute; right: -10px; top: 50%;transform: translateY(-50%);" data-target="#ConfirmNewPassword">
                                                <i class="fa fa-eye"></i>
                                            </button>
                                        </div>
                                        <span id="current password is invalid"></span>
                                        <span id="confirmNewPasswordError" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-2">
                                    </div>
                                    <div class="col-sm-4 text-danger" id="removeAfterAddingpassword">
                                        @TempData["changepassworderror"]
                                    </div>
                                </div>


                                <div class="form-group row">
                                    <div class="col-sm-4">

                                        @*<button type="submit" class="btn btn-success">Save</button>*@
                                        <button type="submit" class="btn btn-success save" id="add" disabled onclick="">Save</button>

                                    </div>
                                </div>
                            }
                        </div>


                        <div class="col-sm-1 col-md-1 col-lg-1"></div>
                        <div class="col-sm-3 col-md-3 col-lg-3">
                            
                              <ul class="float-left">
                                  
                            <li class="text-secondary"> At least one uppercase letter.</li>
                            <li class="text-secondary"> At least one lowercase lette.r</li>
                            <li class="text-secondary"> At least one number.</li>
                            <li class="text-secondary"> At least one special character.</li>
                            <li class="text-secondary"> No Whitespaces.</li>
                            </ul>
                        </div>
                    </div>
                  @*  @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group row">
                            @Html.LabelFor(model => model.CurrentPassword, new { @class="col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.PasswordFor(model => model.CurrentPassword , new { @class="form-control required", id= "CurrentPassword"}) 
                                
                                <span id="currentPasswordError" class="text-danger"></span>
                            </div>
                            
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.NewPassword, new { @class="col-sm-2 col-form-label" })
                            <div class="col-sm-4 position-relative">
                                <div class="input-group">
                                @Html.PasswordFor(model => model.NewPassword , new { @class="form-control required" , id = "NewPassword" })

                                <button type="button" class="btn btn-default toggle-password" style="position: absolute; right: -10px; top: 50%;transform: translateY(-50%);" data-target="#NewPassword">
                                    <i class="fa fa-eye"></i>
                                </button>
                                </div>
                                <span id="CurrentandNewPasswordError" class="text-danger"></span>
                                <span id="newPasswordError" class="text-danger"></span>

                               
                            </div>
                            <div>
                               
                            </div>
                        </div>
                        
                       @* <ul class="float-right">
                                <li class="text-secondary"> At least one uppercase letter.</li>
                                <li class="text-secondary"> At least one lowercase lette.r</li>
                                <li class="text-secondary"> At least one number.</li>
                                <li class="text-secondary"> At least one special character.</li>
                                <li class="text-secondary"> No Whitespaces.</li>
                            </ul>
                        <div class="form-group row ">
                            @Html.LabelFor(model => model.ConfirmNewPassword, new { @class="col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                <div class="input-group">

                                @Html.PasswordFor(model => model.ConfirmNewPassword , new { @class="form-control required", id = "ConfirmNewPassword" })
                                <button type="button" class="btn btn-default toggle-password" style="position: absolute; right: -10px; top: 50%;transform: translateY(-50%);" data-target="#ConfirmNewPassword">
                                    <i class="fa fa-eye"></i>
                                </button>
                                </div>
                                <span id="current password is invalid"></span>
                                <span id="confirmNewPasswordError" class="text-danger"></span>
                            </div>
                        </div>  
                        <div class="form-group row">
                            <div class="col-sm-2">
                            </div>
                            <div class="col-sm-4 text-danger" id="removeAfterAddingpassword">
                               @TempData["changepassworderror"]
                            </div>
                        </div>


                        <div class="form-group row">
                            <div class="col-sm-4">
                        
                                 @*<button type="submit" class="btn btn-success">Save</button>
                                 <button type="submit" class="btn btn-success save" id="add" disabled onclick="">Save</button>
                            
                            </div>
                        </div>
            }*@
                </div>
            </div>
        </div>
    </div>
    <!-- end row -->
</div>
<!-- end container-fluid -->
@section Scripts{
    <script>
        $(document).ready(function () {

            const requiredInputs = document.querySelectorAll('.required');
            const submitBtn = document.querySelector('.save');

            requiredInputs.forEach(input => { input.addEventListener('input', () => { const isDisabled = Array.from(requiredInputs).some(input => !input.value); submitBtn.disabled = isDisabled; }); });



            var holdTimer;

            $(document).on('mousedown', '.toggle-password', function () {
                var input = $($(this).data('target'));
                var icon = $(this).find('i');
                if (input.attr('type') === 'password') {
                    input.attr('type', 'text');
                    icon.removeClass('fa-eye').addClass('fa-eye-slash');
                }
                holdTimer = setTimeout(function () {
                    input.attr('type', 'password');
                    icon.removeClass('fa-eye-slash').addClass('fa-eye');
                }, 2000);
            });

            $(document).on('mouseup', '.toggle-password', function () {
                clearTimeout(holdTimer);
                var input = $($(this).data('target'));
                var icon = $(this).find('i');
                if (input.attr('type') === 'text') {
                    input.attr('type', 'password');
                    icon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            });

          




            $('form').submit(function (event) {

                var currentPassword = $('#CurrentPassword').val();
                var newPassword = $('#NewPassword').val();
                var confirmNewPassword = $('#ConfirmNewPassword').val();
                var regex = /^(?=.*[A-Z])(?=.*\d)(?=.*[$!&@@*?#])[^\s]*$/;




                //Current password = Nayan123$


                var isValid = true;

                if(!currentPassword || !newPassword || !confirmNewPassword) return;

   
               
                if (currentPassword == "" && currentPassword == regexp) {
                    $('#currentPasswordError').text("Please enter current password");
                    isValid = false;
                } else {
                    $('#currentPasswordError').text("");
                }

                if (newPassword == "") {
                    $('#newPasswordError').text("Please enter new password");
                    isValid = false;
                } else {
                    $('#newPasswordError').text("");
                }

                if (confirmNewPassword == "") {
                    $('#confirmNewPasswordError').text("Please confirm new password");
                    isValid = false;
                } else if (confirmNewPassword != newPassword) {
                    $('#confirmNewPasswordError').text("Confirm password does not match new password");
                    isValid = false;
                } else if(currentPassword == newPassword) {
                    $('#CurrentandNewPasswordError').text("Current password and New password cannot be same");
                    isValid = false;
                }else{
                    $('#confirmNewPasswordError').text("");
                }

                if (!regex.test(newPassword)) {
                    $('#newPasswordError').text("Input does not match the required pattern. Please try again.");
                    $('#confirmNewPasswordError').text("Input does not match the required pattern. Please try again.");
                    isValid = false;
                }

                


                if(!isValid){
                    event.preventDefault()

                }

            });


            $("#CurrentPassword").on("input", function () {
            $("#removeAfterAddingpassword").text("");
            });
            $("#CurrentPassword").on("input", function () {
                    $("#currentPasswordError").text("");
            });
            $("#NewPassword").on("input", function () {
                if ($(this).val() !== "") {
                    $("#newPasswordError").text("");
                }
            });
            $("#NewPassword").on("input", function () {
                $("#newPasswordError").text("");
                

            });

          

            $("#ConfirmNewPassword").on("keyup", function () {
                var newPassword = $("#NewPassword").val();
                var confirmNewPassword = $("#ConfirmNewPassword").val();

                if (newPassword !== confirmNewPassword) {
                    $("#confirmNewPasswordError").text("Confirm password does not match new password");
                } else {
                    $("#confirmNewPasswordError").text("");
                }
            });
            $("#NewPassword").on("keyup", function () {
                var newPassword = $("#NewPassword").val();
                var confirmNewPassword = $("#ConfirmNewPassword").val();

                if (newPassword !== confirmNewPassword) {
                    $("#confirmNewPasswordError").text("Confirm password does not match new password");
                } else {
                    $("#confirmNewPasswordError").text("");
                }
            });
            $("#NewPassword").on("keyup", function () {
                var newPassword = $("#NewPassword").val();
                var confirmNewPassword = $("#ConfirmNewPassword").val();
                var currentPassword = $('#CurrentPassword').val();


                if (currentPassword == newPassword) {
                    $("#CurrentandNewPasswordError").text("Current password and New password cannot be same");
                } else {
                    $("#CurrentandNewPasswordError").text("");
                }
            });

        });
    </script>
}